{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\cloud\\\\client\\\\src\\\\components\\\\disk\\\\Disk.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFiles, uploadFile } from \"../../actions/file\";\nimport FileList from \"./fileList/Filelist\";\nimport \"./disk.less\";\nimport Popup from \"./Popup\";\nimport { setCurrentDir, setPopupFile } from \"../../reduser/fileReduser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Disk = () => {\n  _s();\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const dirStack = useSelector(state => state.files.dirStack);\n  useEffect(() => {\n    dispatch(getFiles(currentDir));\n  }, [currentDir]);\n  function showPopupCreated() {\n    dispatch(setPopupFile(true));\n  }\n  function backHandler() {\n    const backDirId = dirStack.pop();\n    dispatch(setCurrentDir(backDirId));\n  }\n  function fileUploadHendler(e) {\n    const files = [...e.target.files];\n    files.forEach(file => dispatch(uploadFile(file), currentDir));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"disk\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disk__btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => backHandler(),\n        className: \"disk__back\",\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disk__create\",\n        onClick: () => showPopupCreated(),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disk__upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"disk__upload-input\",\n          className: \"disk__upload-label\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          multiple: true,\n          onChange: event => fileUploadHandler(event),\n          type: \"file\",\n          id: \"disk__upload-input\",\n          className: \"disk__upload-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Disk, \"Umzu6A5dKAaNUEgQ2DhCTsGaA2k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Disk;\nexport default Disk;\nvar _c;\n$RefreshReg$(_c, \"Disk\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getFiles","uploadFile","FileList","Popup","setCurrentDir","setPopupFile","jsxDEV","_jsxDEV","Disk","_s","dispatch","currentDir","state","files","dirStack","showPopupCreated","backHandler","backDirId","pop","fileUploadHendler","e","target","forEach","file","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","multiple","onChange","event","fileUploadHandler","type","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/cloud/client/src/components/disk/Disk.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFiles, uploadFile } from \"../../actions/file\";\r\nimport FileList from \"./fileList/Filelist\";\r\nimport \"./disk.less\";\r\nimport Popup from \"./Popup\";\r\nimport { setCurrentDir, setPopupFile } from \"../../reduser/fileReduser\";\r\n\r\nconst Disk = () => {\r\n  const dispatch = useDispatch();\r\n  const currentDir = useSelector((state) => state.files.currentDir);\r\n  const dirStack = useSelector((state) => state.files.dirStack);\r\n\r\n  useEffect(() => {\r\n    dispatch(getFiles(currentDir));\r\n  }, [currentDir]);\r\n\r\n  function showPopupCreated() {\r\n    dispatch(setPopupFile(true));\r\n  }\r\n\r\n  function backHandler() {\r\n    const backDirId = dirStack.pop();\r\n    dispatch(setCurrentDir(backDirId));\r\n  }\r\n\r\n  function fileUploadHendler(e) {\r\n    const files = [...e.target.files];\r\n    files.forEach((file) => dispatch(uploadFile(file), currentDir));\r\n  }\r\n\r\n  return (\r\n    <div className=\"disk\">\r\n      <div className=\"disk__btns\">\r\n        <button onClick={() => backHandler()} className=\"disk__back\">\r\n          Назад\r\n        </button>\r\n        <button className=\"disk__create\" onClick={() => showPopupCreated()}>\r\n          Создать папку\r\n        </button>\r\n        <div className=\"disk__upload\">\r\n                        <label htmlFor=\"disk__upload-input\" className=\"disk__upload-label\">Загрузить файл</label>\r\n                        <input multiple={true} onChange={(event)=> fileUploadHandler(event)} type=\"file\" id=\"disk__upload-input\" className=\"disk__upload-input\"/>\r\n                    </div>\r\n      </div>\r\n      <FileList />\r\n      <Popup />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Disk;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}